// Code generated by MockGen. DO NOT EDIT.
// Source: http.go
//
// Generated by this command:
//
//	mockgen -destination mock_http/mock_http.go -source http.go IHttpClient
//

// Package mock_http is a generated GoMock package.
package mock_http

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIHttpClient is a mock of IHttpClient interface.
type MockIHttpClient struct {
	ctrl     *gomock.Controller
	recorder *MockIHttpClientMockRecorder
	isgomock struct{}
}

// MockIHttpClientMockRecorder is the mock recorder for MockIHttpClient.
type MockIHttpClientMockRecorder struct {
	mock *MockIHttpClient
}

// NewMockIHttpClient creates a new mock instance.
func NewMockIHttpClient(ctrl *gomock.Controller) *MockIHttpClient {
	mock := &MockIHttpClient{ctrl: ctrl}
	mock.recorder = &MockIHttpClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIHttpClient) EXPECT() *MockIHttpClientMockRecorder {
	return m.recorder
}

// DeleteMarshalReturnObj mocks base method.
func (m *MockIHttpClient) DeleteMarshalReturnObj(url string, obj any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteMarshalReturnObj", url, obj)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteMarshalReturnObj indicates an expected call of DeleteMarshalReturnObj.
func (mr *MockIHttpClientMockRecorder) DeleteMarshalReturnObj(url, obj any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteMarshalReturnObj", reflect.TypeOf((*MockIHttpClient)(nil).DeleteMarshalReturnObj), url, obj)
}

// GetMarshalReturnObj mocks base method.
func (m *MockIHttpClient) GetMarshalReturnObj(url string, obj any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMarshalReturnObj", url, obj)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetMarshalReturnObj indicates an expected call of GetMarshalReturnObj.
func (mr *MockIHttpClientMockRecorder) GetMarshalReturnObj(url, obj any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMarshalReturnObj", reflect.TypeOf((*MockIHttpClient)(nil).GetMarshalReturnObj), url, obj)
}
